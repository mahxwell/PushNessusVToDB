-- MySQL Script generated by MySQL Workbench
-- Mon Jun 21 10:54:09 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema NessusVulnerabilities
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema NessusVulnerabilities
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `NessusVulnerabilities` DEFAULT CHARACTER SET utf8 ;
USE `NessusVulnerabilities` ;

-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`client_interne_gestion`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`client_interne_gestion` (
  `idclient_interne_gestion` INT NOT NULL AUTO_INCREMENT,
  `client` VARCHAR(45) NULL,
  `interne` VARCHAR(45) NULL,
  `gestion` VARCHAR(45) NULL,
  PRIMARY KEY (`idclient_interne_gestion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`ip1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`ip1` (
  `idip1` INT NOT NULL AUTO_INCREMENT,
  `ip1_content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idip1`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`ip2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`ip2` (
  `idip2` INT NOT NULL AUTO_INCREMENT,
  `ip2_content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idip2`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`ip3`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`ip3` (
  `idip3` INT NOT NULL AUTO_INCREMENT,
  `ip3_content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idip3`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`ip4`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`ip4` (
  `idip4` INT NOT NULL AUTO_INCREMENT,
  `ip4_content` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idip4`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`ip`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`ip` (
  `idip` INT NOT NULL AUTO_INCREMENT,
  `ip_description` VARCHAR(45) NOT NULL,
  `ip1_idip1` INT NOT NULL,
  `ip2_idip2` INT NOT NULL,
  `ip3_idip3` INT NOT NULL,
  `ip4_idip4` INT NOT NULL,
  PRIMARY KEY (`idip`, `ip1_idip1`, `ip2_idip2`, `ip3_idip3`, `ip4_idip4`),
  INDEX `fk_ip_ip11_idx` (`ip1_idip1` ASC),
  INDEX `fk_ip_ip21_idx` (`ip2_idip2` ASC),
  INDEX `fk_ip_ip31_idx` (`ip3_idip3` ASC),
  INDEX `fk_ip_ip41_idx` (`ip4_idip4` ASC),
  CONSTRAINT `fk_ip_ip11`
    FOREIGN KEY (`ip1_idip1`)
    REFERENCES `NessusVulnerabilities`.`ip1` (`idip1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ip_ip21`
    FOREIGN KEY (`ip2_idip2`)
    REFERENCES `NessusVulnerabilities`.`ip2` (`idip2`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ip_ip31`
    FOREIGN KEY (`ip3_idip3`)
    REFERENCES `NessusVulnerabilities`.`ip3` (`idip3`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ip_ip41`
    FOREIGN KEY (`ip4_idip4`)
    REFERENCES `NessusVulnerabilities`.`ip4` (`idip4`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`vulnerabilities`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`vulnerabilities` (
  `idvulnerabilities_nbr` INT NOT NULL AUTO_INCREMENT,
  `total_vulnerabilities` INT NULL,
  `medium_vulnerabilities` INT NULL,
  `high_vulnerabilities` INT NULL,
  `critical_vulnerabilities` INT NULL,
  `ip_idip` INT NOT NULL,
  `ip_ip1_idip1` INT NOT NULL,
  `ip_ip2_idip2` INT NOT NULL,
  `ip_ip3_idip3` INT NOT NULL,
  `ip_ip4_idip4` INT NOT NULL,
  PRIMARY KEY (`idvulnerabilities_nbr`, `ip_idip`, `ip_ip1_idip1`, `ip_ip2_idip2`, `ip_ip3_idip3`, `ip_ip4_idip4`),
  INDEX `fk_vulnerabilities_nbr_ip1_idx` (`ip_idip` ASC, `ip_ip1_idip1` ASC, `ip_ip2_idip2` ASC, `ip_ip3_idip3` ASC, `ip_ip4_idip4` ASC),
  CONSTRAINT `fk_vulnerabilities_nbr_ip1`
    FOREIGN KEY (`ip_idip` , `ip_ip1_idip1` , `ip_ip2_idip2` , `ip_ip3_idip3` , `ip_ip4_idip4`)
    REFERENCES `NessusVulnerabilities`.`ip` (`idip` , `ip1_idip1` , `ip2_idip2` , `ip3_idip3` , `ip4_idip4`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`iptype`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`iptype` (
  `idiptype` INT NOT NULL AUTO_INCREMENT,
  `ipv4` INT NULL,
  `ipv6` INT NULL,
  PRIMARY KEY (`idiptype`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`recommandations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`recommandations` (
  `idrecommandations` INT NOT NULL AUTO_INCREMENT,
  `recommandations_description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idrecommandations`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`mesures_att_rem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`mesures_att_rem` (
  `idmesures_att_rem` INT NOT NULL AUTO_INCREMENT,
  `mesures_att_rem_description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idmesures_att_rem`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`acceptation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`acceptation` (
  `idacceptation` INT NOT NULL AUTO_INCREMENT,
  `acceptation_description` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idacceptation`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `NessusVulnerabilities`.`risk`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `NessusVulnerabilities`.`risk` (
  `idrisk` INT NOT NULL AUTO_INCREMENT,
  `risk_description` VARCHAR(45) NOT NULL,
  `recommandations_idrecommandations` INT NOT NULL,
  `mesures_att_rem_idmesures_att_rem` INT NOT NULL,
  `acceptation_idacceptation` INT NOT NULL,
  PRIMARY KEY (`idrisk`, `recommandations_idrecommandations`, `mesures_att_rem_idmesures_att_rem`, `acceptation_idacceptation`),
  INDEX `fk_risk_recommandations1_idx` (`recommandations_idrecommandations` ASC),
  INDEX `fk_risk_mesures_att_rem1_idx` (`mesures_att_rem_idmesures_att_rem` ASC),
  INDEX `fk_risk_acceptation1_idx` (`acceptation_idacceptation` ASC),
  CONSTRAINT `fk_risk_recommandations1`
    FOREIGN KEY (`recommandations_idrecommandations`)
    REFERENCES `NessusVulnerabilities`.`recommandations` (`idrecommandations`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_risk_mesures_att_rem1`
    FOREIGN KEY (`mesures_att_rem_idmesures_att_rem`)
    REFERENCES `NessusVulnerabilities`.`mesures_att_rem` (`idmesures_att_rem`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_risk_acceptation1`
    FOREIGN KEY (`acceptation_idacceptation`)
    REFERENCES `NessusVulnerabilities`.`acceptation` (`idacceptation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
